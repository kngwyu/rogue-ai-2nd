* メモ
** メッセージの利用
- アイテム→追加&fetchする
- 敵→履歴に保存する
** 行動決定時に考慮すること
*** Explore
- Exploreするかどうか
  - アイテムは十分拾ったか
  - どのくらい探索したか
  - 階段は発見したか
- どこをExploreするか
  - (sを使う場合も含めて)評価値を算出
  - 評価値は(例えば) 到達する場所の広さの期待値 * 100 / かかる手間の期待値 とか？ 
  - 
*** 敵
- 敵がいるか
- いるなら、戦うべきか
  - 戦うなら、どう立ちまわるべきか
  - 逃げるなら、どう逃げるべきか
** 相互作用の利用
*** 具体的に
- 探索した場合のフィールドの変化
- 移動できたかどうか
- 敵に対するダメージ(あまり意味ない？)
*** 一連の行動に対する成功判定
- Fight → 探索するので成功判定なし(問題があるかもしれないが)
- ToStair, Explore, PickItem → 目的地についたかどうか
- Recover → HPが回復したかどうか
*** 一連の行動に対する失敗判定
- どうしようかねえ...
- とりあえずrethinkしてごまかす？
** その他
- 戦闘
  - roll_em を呼び出す
    - roll_em(THING *thatt, THING *thdef, THING *weap, bool hurl)
      - thattは攻撃する側のポインタ、thdefはされるのポインタ
      - weapはweapon hurlは投げるならTRUE
      - "1x6/3x4" のようなダイス文字列をatoiで読んでループをまわす
    - 当たり判定
      - swing(att->s_lvl, def_arm, hplus + str_plus[..])
      - レベル、敵のアーマー、武器の命中率補正+強さ補正
        - 武器の命中率補正は通常1 ランダム生成時は -rnd(3)+1(10%)またはrnd(3)+1(5%)または0
        - 自分なら1敵なら0が無難？
        - 敵は強さ補正なし
        - 相手がnot runningならhplusに+4
          - 自分はIce Monsterやtrap等がなければ基本的にRUNNING
          - 敵はたぶん単に止まっているかどうか(未検証)
        - 武器の補正値は未使用かも？なので基本的にrunningの補正だけでいい？
      - rnd(20) + 補正 >= 20 - レベル - アーマー で 成功 なので
      - rnd(20) >= 20 - レベル - アーマー 補正で成功
    - ダメージ計算
      - dplus + ダイス値 + add_dam(強さ補正)
      - dplusは武器の補正値 
  - 敵→自分
    - roll_em (THING* mp, &player, NULL, FALSE)
- モンスターの生成(new_monser in monster.c)
  - レベルは26階以下では1ずつ補正がかかるが、それまでは固定
  - HPは固有レベルをダイス値として×8
  - 経験値は規定の値+(27階以上補正)+(lvl=1->max_hp/8 lvl=2..6->max_hp/6 lvl=7..9->max_hp*2/3 それ以上->maxhp*10/3)
- モンスターが動き出すかどうかの判定
  - !on(*tp, ISRUN) && rnd(3) != 0 && on(*tp, ISMEAN) &&..
    - つまりMEANでも33%の確率でプレイヤーに近づき出さない
  - MedusaとGreedyなMonsterは特殊判定あり
- 探索(searchコマンド)
  - 状態異常値(sv): ISHALU: 3 ISBLIND 2
  - ドアの場合: 1 / (5 + sv)
  - 通路の場合: 1 / (2 + sv)
  - 隠し通路出現率をp、隠し通路が存在する確率をqとすると、n回探索した時に通路が見つかる確率は
    - 1 * q * (1.0 - (1.0-p)^n)
- アーマー
  - アーマークラス
  - 表示されるのは10 - obj->o_arm
#+BEGIN_SRC c
int a_class[MAXARMORS] = {		/* Armor class for each armor type */
	8,	/* LEATHER */
	7,	/* RING_MAIL */
	7,	/* STUDDED_LEATHER */
	6,	/* SCALE_MAIL */
	5,	/* CHAIN_MAIL */
	4,	/* SPLINT_MAIL */
	4,	/* BANDED_MAIL */
	3,	/* PLATE_MAIL */
};
#+END_SRC

